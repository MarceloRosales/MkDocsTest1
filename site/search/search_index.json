{"config":{"indexing":"full","lang":["en","ja","es"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"MkDocs/","text":"MkDocs MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. Start by reading the introductory tutorial, then check the User Guide for more information. Mkdocs Python - How to Create & Publish Documentations For Your Packages Alexys Jacob - Create beautiful and localized documentations and websites using MkDocs + Github MkDocs Materials : Documentation that simply works. Write your documentation in Markdown and create a professional static site in minutes \u2013 searchable, customizable, for all devices. MkDocs Themes top MkDocs Install. MkDocs official site User Guide Building Documentation with MkDocs The MkDocs Developer Guide provides documentation for users of MkDocs. See Getting Started for an introductory tutorial. You can jump directly to a page listed below, or use the next and previous buttons in the navigation bar at the top of the page to move through the documentation in order. - Installation - Writing Your Docs - Choosing Your Theme - Customizing Your Theme - Configuration - Deploying Your Docs HOW TO INSTALL MKDOCS ON MAC AND SETUP THE INTEGRATION TO GITHUB PAGES January 25, 2021 Summary: LOCAL SETUP ON MAC OS - brew brew --version ; - Python 3 python --version ; find&install brew list <formula1> || brew install <formula1> ; brew install python3 ; brew install python@3.10 - Pip : pip --version ; pip3 install --upgrade pip - MkDocs : pip3 install mkdocs (I used this install as described in guide); option: brew install mkdocs (error) - MkDocs Material Extensions : pip3 install mkdocs-material Other Plugins: - i18n : pip install mkdocs-static-i18n ; - Theme Materials: pip install mkdocs-material CONFIGURATION IN THE GITHUB PROJECT - GitHub CI - GitHub Pages - GitHub Branch MKDOCS INSTALLATION ON MAC STEP 1: VERIFY THE BREW INSTALLATION Check if intalled: brew \u2013version STEP 2: CHANGE THE FOLDER PERMISSION TO INSTALL PYTHON, IF NEEDED sudo chown -R $(whoami) /usr/local/lib/pkgconfig chmod u+w /usr/local/lib/pkgconfig STEP 3: INSTALL PYTHON3 To check if python and pip are installed use: python --version (Python 3.8.2) pip --version (pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8)) Or brew list <formula1> || brew install <formula1> If not installed use: brew install python3 20220704: Already Installed version 3.8, 3.9 I installed lates version: brew install python@3.10 Python has been installed as /usr/local/opt/python@3.10/bin/python3 Unversioned symlinks `python`, `python-config`, `pip` etc. pointing to `python3`, `python3-config`, `pip3` etc., respectively, have been installed into /usr/local/opt/python@3.10/libexec/bin You can install Python packages with /usr/local/opt/python@3.10/bin/pip3 install <package> They will install into the site-package directory /usr/local/lib/python3.10/site-packages tkinter is no longer included with this formula, but it is available separately: brew install python-tk@3.10 See: https://docs.brew.sh/Homebrew-and-Python python@3.10 is keg-only, which means it was not symlinked into /usr/local, because this is an alternate version of another formula. If you need to have python@3.10 first in your PATH, run: echo 'export PATH=\"/usr/local/opt/python@3.10/bin:$PATH\"' >> ~/.zshrc For compilers to find python@3.10 you may need to set: export LDFLAGS=\"-L/usr/local/opt/python@3.10/lib\" For pkg-config to find python@3.10 you may need to set: export PKG_CONFIG_PATH=\"/usr/local/opt/python@3.10/lib/pkgconfig\" ==> Summary \ud83c\udf7a /usr/local/Cellar/python@3.10/3.10.5: 3,137 files, 56.8MB ==> Running `brew cleanup python@3.10`... Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP. Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`). STEP 4: Install UPGRADE PIP pip \u2013version pip3 install --upgrade pip STEP 5: INSTALL MKDOCS pip3 install mkdocs (I used this install as described in guide). brew install mkdocs : Error: The `brew link` step did not complete successfully The formula built, but is not symlinked into /usr/local Could not symlink bin/mkdocs Target /usr/local/bin/mkdocs already exists. You may want to remove it: rm '/usr/local/bin/mkdocs' STEP 6: INSTALL MKDOCS-MATERIAL pip3 install mkdocs-material STEP 7: INSTALL MKDOCS-MATERIAL-EXTENSIONS pip3 install mkdocs-material-extensions VERIFY AND BUILD YOUR DOCUMENTATION STEP 1: ENSURE YOU HAVE THE MKDOCS.YML FILE IN PLACE Here is an example configuration for the mkdocs.yml file and here you find an example project, which is based on that configuration. top Documentation For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. Cnt+C - to stop server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - deploy to github. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. top To create a site: cd /Users/marcelorosales/Documents/GitHub/MkDocs/MkDocsTut220704 mkdocs new Hello-siteTest INFO - Creating project directory: Hello-siteTest INFO - Writing config file: Hello-siteTest/mkdocs.yml INFO - Writing initial docs: Hello-siteTest/docs/index.md Ls Hello-siteTest cd Hello-siteTest Tree . \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 index.md \u2514\u2500\u2500 mkdocs.yml code . In editor softw Modify mkdocs.yml, the site_name, site_url, Nav, etc. site_name: Hello-siteTest site_url: https://example.com_or_my.github nav: - Home: Index.md Save.. top Live Pre-view of the site (Local Server) In terminal. mkdocs serve INFO - Building documentation... INFO - Cleaning site directory INFO - Documentation built in 0.07 seconds INFO - [16:12:35] Watching paths for changes: 'docs', 'mkdocs.yml' INFO - [16:12:35] Serving on http://127.0.0.1:8000/ INFO - [16:13:00] Browser connected: http://127.0.0.1:8000/ top To create more Nav Tabs In editor: New File > language: .md > {# Name of the Tab or Section} > Save: {NewNavTabName} > Save Eg. NewNavTab1.md NewNavTab2.md Open mkdocs.yml > Add NavTabs file Names to Nav site_name: Hello-siteTest site_url: https://example.com_or_my.github nav: - Home: Index.md - New Nav Tab 1: NewNavTab1.md - New Nav Tab 2: NewNavTab2.md top MkDocs Themes In the mkdocs.yml file add a theme: Eg theme: readthedocs site_name: Test site site_url: https://example.com_or_my.github nav: - Home: index.md - New Nav Tab 1: NewNavTab1.md - New Nav Tab 2: NewNavTab2.md theme: readthedocs Other themes. theme: # name: readthedocs name: material top Add images/assets Stop server. Create assets/ in the docs/ . Insert images in the folder. In the Hom top Internationalization plugin. Pages Create the pages in the desired languages. Index.md --> Index.en.md | --> Index.jp.md | --> Index.es.md Add plugins to .yaml file plugins: - search # add search box. - i18n: # language plugin. default_language: en languages: en: English jp: \u65e5\u672c\u8a9e es: Espa\u00f1ol Then deploy: mkdocs serve May require Install plunging pip install mkdocs-static-i18n More info here Images Create the images in the desired languages and add the language as an extension . img.png --> img.en.png | --> img.ja.png | --> img.es.png WARNING - Language jp is not supported by mkdocs-material==8.3.8, not setting the 'theme.language' option. CORRECTION: is ja for Japanese, not jp. It works anyways\u203c! In md files just use the name of the image, plug in will automatically assign the language extension to the corresponding language .md file. Eg. ![imgName](assets/img.png) top To build site. Once site is finished, stop live preview Cnt+C In Terminal: mkdocs build INFO - Cleaning site directory INFO - Building documentation to directory: /Users/marcelorosales/Documents/GitHub/MkDocs/MkDocsTut220704/Hello-siteTest/site INFO - Documentation built in 0.11 seconds Will create all the files and folders required for an HTML site. top To deploy in Github. In terminal: (Make sure you are in the directory containing the site) mkdocs gh-deploy Revise this section Open Github Desktop Add > Add an existing repocitory > ..[].. > choose > path > add > ..[!\u2206!].. \u00a9 create a repository > \u2026[]\u2026 Name:{} > Description: {} > \u00a9 Create Repository. Commit > Description > \u00a9 Commit to main Go to my github.com > General > Danger zone > Change visibility > \u2026[]\u2026 Make public > Please type \u2026 to confirm. Go to Pages > Branch: \u00a9 gh-pages > \u00a9 root > save ` Your site is published at Error! Hyperlink reference not valid. After committing to github. Try later. top Automatic mkdocs gh-deploy and plugin extensions Use Github Actions to run mkdocs gh-deploy automatically when push new commits. .github/workflows/gh-deploy.yml [ ] Finish this section. Theme Materials Install pip install mkdocs-material top Material theme extension guide. Navigation Mkdocs Install MAC OS brew --version python --version brew install python3 # (not used) brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdocs brew install mkdocs # (not use) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n # (Internationalization plugin) pip install mkdocs-material","title":"MkDocs"},{"location":"MkDocs/#mkdocs","text":"MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. Start by reading the introductory tutorial, then check the User Guide for more information. Mkdocs Python - How to Create & Publish Documentations For Your Packages Alexys Jacob - Create beautiful and localized documentations and websites using MkDocs + Github MkDocs Materials : Documentation that simply works. Write your documentation in Markdown and create a professional static site in minutes \u2013 searchable, customizable, for all devices. MkDocs Themes top","title":"MkDocs"},{"location":"MkDocs/#mkdocs-install","text":"MkDocs official site User Guide Building Documentation with MkDocs The MkDocs Developer Guide provides documentation for users of MkDocs. See Getting Started for an introductory tutorial. You can jump directly to a page listed below, or use the next and previous buttons in the navigation bar at the top of the page to move through the documentation in order. - Installation - Writing Your Docs - Choosing Your Theme - Customizing Your Theme - Configuration - Deploying Your Docs HOW TO INSTALL MKDOCS ON MAC AND SETUP THE INTEGRATION TO GITHUB PAGES January 25, 2021 Summary: LOCAL SETUP ON MAC OS - brew brew --version ; - Python 3 python --version ; find&install brew list <formula1> || brew install <formula1> ; brew install python3 ; brew install python@3.10 - Pip : pip --version ; pip3 install --upgrade pip - MkDocs : pip3 install mkdocs (I used this install as described in guide); option: brew install mkdocs (error) - MkDocs Material Extensions : pip3 install mkdocs-material Other Plugins: - i18n : pip install mkdocs-static-i18n ; - Theme Materials: pip install mkdocs-material CONFIGURATION IN THE GITHUB PROJECT - GitHub CI - GitHub Pages - GitHub Branch MKDOCS INSTALLATION ON MAC STEP 1: VERIFY THE BREW INSTALLATION Check if intalled: brew \u2013version STEP 2: CHANGE THE FOLDER PERMISSION TO INSTALL PYTHON, IF NEEDED sudo chown -R $(whoami) /usr/local/lib/pkgconfig chmod u+w /usr/local/lib/pkgconfig STEP 3: INSTALL PYTHON3 To check if python and pip are installed use: python --version (Python 3.8.2) pip --version (pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8)) Or brew list <formula1> || brew install <formula1> If not installed use: brew install python3 20220704: Already Installed version 3.8, 3.9 I installed lates version: brew install python@3.10 Python has been installed as /usr/local/opt/python@3.10/bin/python3 Unversioned symlinks `python`, `python-config`, `pip` etc. pointing to `python3`, `python3-config`, `pip3` etc., respectively, have been installed into /usr/local/opt/python@3.10/libexec/bin You can install Python packages with /usr/local/opt/python@3.10/bin/pip3 install <package> They will install into the site-package directory /usr/local/lib/python3.10/site-packages tkinter is no longer included with this formula, but it is available separately: brew install python-tk@3.10 See: https://docs.brew.sh/Homebrew-and-Python python@3.10 is keg-only, which means it was not symlinked into /usr/local, because this is an alternate version of another formula. If you need to have python@3.10 first in your PATH, run: echo 'export PATH=\"/usr/local/opt/python@3.10/bin:$PATH\"' >> ~/.zshrc For compilers to find python@3.10 you may need to set: export LDFLAGS=\"-L/usr/local/opt/python@3.10/lib\" For pkg-config to find python@3.10 you may need to set: export PKG_CONFIG_PATH=\"/usr/local/opt/python@3.10/lib/pkgconfig\" ==> Summary \ud83c\udf7a /usr/local/Cellar/python@3.10/3.10.5: 3,137 files, 56.8MB ==> Running `brew cleanup python@3.10`... Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP. Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`). STEP 4: Install UPGRADE PIP pip \u2013version pip3 install --upgrade pip STEP 5: INSTALL MKDOCS pip3 install mkdocs (I used this install as described in guide). brew install mkdocs : Error: The `brew link` step did not complete successfully The formula built, but is not symlinked into /usr/local Could not symlink bin/mkdocs Target /usr/local/bin/mkdocs already exists. You may want to remove it: rm '/usr/local/bin/mkdocs' STEP 6: INSTALL MKDOCS-MATERIAL pip3 install mkdocs-material STEP 7: INSTALL MKDOCS-MATERIAL-EXTENSIONS pip3 install mkdocs-material-extensions VERIFY AND BUILD YOUR DOCUMENTATION STEP 1: ENSURE YOU HAVE THE MKDOCS.YML FILE IN PLACE Here is an example configuration for the mkdocs.yml file and here you find an example project, which is based on that configuration. top","title":"MkDocs Install."},{"location":"MkDocs/#documentation","text":"For full documentation visit mkdocs.org .","title":"Documentation"},{"location":"MkDocs/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. Cnt+C - to stop server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - deploy to github. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. top","title":"Commands"},{"location":"MkDocs/#to-create-a-site","text":"cd /Users/marcelorosales/Documents/GitHub/MkDocs/MkDocsTut220704 mkdocs new Hello-siteTest INFO - Creating project directory: Hello-siteTest INFO - Writing config file: Hello-siteTest/mkdocs.yml INFO - Writing initial docs: Hello-siteTest/docs/index.md Ls Hello-siteTest cd Hello-siteTest Tree . \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 index.md \u2514\u2500\u2500 mkdocs.yml code . In editor softw Modify mkdocs.yml, the site_name, site_url, Nav, etc. site_name: Hello-siteTest site_url: https://example.com_or_my.github nav: - Home: Index.md Save.. top","title":"To create a site:"},{"location":"MkDocs/#live-pre-view-of-the-site-local-server","text":"In terminal. mkdocs serve INFO - Building documentation... INFO - Cleaning site directory INFO - Documentation built in 0.07 seconds INFO - [16:12:35] Watching paths for changes: 'docs', 'mkdocs.yml' INFO - [16:12:35] Serving on http://127.0.0.1:8000/ INFO - [16:13:00] Browser connected: http://127.0.0.1:8000/ top","title":"Live Pre-view of the site (Local Server)"},{"location":"MkDocs/#to-create-more-nav-tabs","text":"In editor: New File > language: .md > {# Name of the Tab or Section} > Save: {NewNavTabName} > Save Eg. NewNavTab1.md NewNavTab2.md Open mkdocs.yml > Add NavTabs file Names to Nav site_name: Hello-siteTest site_url: https://example.com_or_my.github nav: - Home: Index.md - New Nav Tab 1: NewNavTab1.md - New Nav Tab 2: NewNavTab2.md top","title":"To create more Nav Tabs"},{"location":"MkDocs/#mkdocs-themes","text":"In the mkdocs.yml file add a theme: Eg theme: readthedocs site_name: Test site site_url: https://example.com_or_my.github nav: - Home: index.md - New Nav Tab 1: NewNavTab1.md - New Nav Tab 2: NewNavTab2.md theme: readthedocs Other themes. theme: # name: readthedocs name: material top","title":"MkDocs Themes"},{"location":"MkDocs/#add-imagesassets","text":"Stop server. Create assets/ in the docs/ . Insert images in the folder. In the Hom top","title":"Add images/assets"},{"location":"MkDocs/#internationalization-plugin","text":"","title":"Internationalization plugin."},{"location":"MkDocs/#pages","text":"Create the pages in the desired languages. Index.md --> Index.en.md | --> Index.jp.md | --> Index.es.md Add plugins to .yaml file plugins: - search # add search box. - i18n: # language plugin. default_language: en languages: en: English jp: \u65e5\u672c\u8a9e es: Espa\u00f1ol Then deploy: mkdocs serve May require Install plunging pip install mkdocs-static-i18n More info here","title":"Pages"},{"location":"MkDocs/#images","text":"Create the images in the desired languages and add the language as an extension . img.png --> img.en.png | --> img.ja.png | --> img.es.png WARNING - Language jp is not supported by mkdocs-material==8.3.8, not setting the 'theme.language' option. CORRECTION: is ja for Japanese, not jp. It works anyways\u203c! In md files just use the name of the image, plug in will automatically assign the language extension to the corresponding language .md file. Eg. ![imgName](assets/img.png) top","title":"Images"},{"location":"MkDocs/#to-build-site","text":"Once site is finished, stop live preview Cnt+C In Terminal: mkdocs build INFO - Cleaning site directory INFO - Building documentation to directory: /Users/marcelorosales/Documents/GitHub/MkDocs/MkDocsTut220704/Hello-siteTest/site INFO - Documentation built in 0.11 seconds Will create all the files and folders required for an HTML site. top","title":"To build site."},{"location":"MkDocs/#to-deploy-in-github","text":"In terminal: (Make sure you are in the directory containing the site) mkdocs gh-deploy Revise this section Open Github Desktop Add > Add an existing repocitory > ..[].. > choose > path > add > ..[!\u2206!].. \u00a9 create a repository > \u2026[]\u2026 Name:{} > Description: {} > \u00a9 Create Repository. Commit > Description > \u00a9 Commit to main Go to my github.com > General > Danger zone > Change visibility > \u2026[]\u2026 Make public > Please type \u2026 to confirm. Go to Pages > Branch: \u00a9 gh-pages > \u00a9 root > save ` Your site is published at Error! Hyperlink reference not valid. After committing to github. Try later. top","title":"To deploy in Github."},{"location":"MkDocs/#automatic-mkdocs-gh-deploy-and-plugin-extensions","text":"Use Github Actions to run mkdocs gh-deploy automatically when push new commits. .github/workflows/gh-deploy.yml [ ] Finish this section. Theme Materials Install pip install mkdocs-material top","title":"Automatic mkdocs gh-deploy and plugin extensions"},{"location":"MkDocs/#material-theme-extension-guide","text":"Navigation","title":"Material theme extension guide."},{"location":"MkDocs/#mkdocs-install-mac-os","text":"brew --version python --version brew install python3 # (not used) brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdocs brew install mkdocs # (not use) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n # (Internationalization plugin) pip install mkdocs-material","title":"Mkdocs Install MAC OS"},{"location":"VS_Code/","text":"VS code: VS Code key shortcuts Shft+Cmd+P \u00bb show all commands, search key shortcuts. Cmd+P \u00bb Go to file (open). Cont+Tab \u00bb Switch between Tabs/Pages. Cmd+W \u00bb close file. Shift+Cmd+F \u00bb Find in File. F5 \u00bb Start debugging. Cont+ \u00bb Toggle Terminal. shift+Cmd+X \u00bb Extensions. Don't Use the Sidebar in VS Code!! vid Extensions Recomended: Advanced-new-file by patbenatar. File Utils by Steffen Leistner. Setting Sync on: Account -> Github. Extensions installed How to install extension: -> Open VS code > Extensions (shift+Cmd+X) > search: extension name > \u00a9Install button. Top 40+ VSCode Extensions for Developers in 2022 Link Top 10 VSCode extensions to use in 2022 Markdown-preview-enhanced by Yiyi Wang. Live Preview by Microsoft vid Markdown All in One by Yu Zhang, link R by REditorSupport GitLens \u2014 Git supercharged by GitKraken YAML by Red hat. Auto Rename Tag by TabNine. Peacock by John Papa. Colorize by kamikillerto. Code Runner by Jun Han. To run only a small snippet of code. Auto rename tag by Jun Han. Vim by vscodevim (need this emulator? Probably not, it just gives you some special shortcuts do not install ).. Warning. This extension will Override Rich Text Copy/Paste of VS. Copy and Paste code into Word, Ignores Syntax Highlighting (When copy code and paste in Word, code colors will no longer be applied). 1. Make sure that // Code > Preferences> Settings > Text Editor > \u221a Editor: Copy With Syntax Highlighting (is checked) . Controls whether syntax highlighting should be copied into the clipboard. 1. To solve: shift+Cmd+P > type: copy > in: Vim: !\u00a9 Override Copy (uncheck vim override copy) . Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working. VS Code tips: - Indentation settings and the indentation status bar entry Low right // Tab Size\u02c7 > Indent using tabs > \u00a9 2. Convert indentation to tab/spaces: Low right // Tab Size\u02c7 > Convert indentation to Spaces || Convert indentation to Tabs. or VS code panel > R\u00a9 > Format document > HTML preview in VS Code Live Server by Ritwick Dey (Opens in Web browser only). *HTML Preview by Thomas Haakon Townsend (Deprecated). Markdown preview enhanced . Check out shd101wyy/markdown-preview-enhanced (Public). Unsplit an editor , go back from 2 code views to 1, same with terminal. To \"unsplit\" editor groups without closing any open files , use the menu-bars: View > Editor Layout > Single (or, while in the editor, press and release ALT and then type vls). Editor groups are also closed by default when they become empty. Wrap code Settings \u00bb Cmd+, //Code > Preferences > Settings > Editor: Word Wrap Controls how lines should wrap. Types of comments: Single-line comment. Syntax #This is a comment Example: #Single line comment echo \"hello world\" Multi-line comment. Syntax: : ' This is a Multi-line comments' Example: echo \"multiline comments\" : ' Print some word' Types of codes? ```bash {cmd} ls . ```javascript {cmd=\"node\"} const date = Date.now() console.log(date.toString()) ```erd {cdm:true, output:\u201dhtlm\u201d, args:[\u201c-i\u201d, \u201cinput_file\u201d, \u201c-f\u201d, \u201csvg]} [Person] *name Height Weight +birth_location_id [Location] *id City State Country Person *--1 Location ``` {r} #code written in R print(\u2018AIR Forum 2018\u2019)","title":"VS_Code"},{"location":"VS_Code/#vs-code","text":"VS Code key shortcuts Shft+Cmd+P \u00bb show all commands, search key shortcuts. Cmd+P \u00bb Go to file (open). Cont+Tab \u00bb Switch between Tabs/Pages. Cmd+W \u00bb close file. Shift+Cmd+F \u00bb Find in File. F5 \u00bb Start debugging. Cont+ \u00bb Toggle Terminal. shift+Cmd+X \u00bb Extensions. Don't Use the Sidebar in VS Code!! vid Extensions Recomended: Advanced-new-file by patbenatar. File Utils by Steffen Leistner. Setting Sync on: Account -> Github. Extensions installed How to install extension: -> Open VS code > Extensions (shift+Cmd+X) > search: extension name > \u00a9Install button. Top 40+ VSCode Extensions for Developers in 2022 Link Top 10 VSCode extensions to use in 2022 Markdown-preview-enhanced by Yiyi Wang. Live Preview by Microsoft vid Markdown All in One by Yu Zhang, link R by REditorSupport GitLens \u2014 Git supercharged by GitKraken YAML by Red hat. Auto Rename Tag by TabNine. Peacock by John Papa. Colorize by kamikillerto. Code Runner by Jun Han. To run only a small snippet of code. Auto rename tag by Jun Han. Vim by vscodevim (need this emulator? Probably not, it just gives you some special shortcuts do not install ).. Warning. This extension will Override Rich Text Copy/Paste of VS. Copy and Paste code into Word, Ignores Syntax Highlighting (When copy code and paste in Word, code colors will no longer be applied). 1. Make sure that // Code > Preferences> Settings > Text Editor > \u221a Editor: Copy With Syntax Highlighting (is checked) . Controls whether syntax highlighting should be copied into the clipboard. 1. To solve: shift+Cmd+P > type: copy > in: Vim: !\u00a9 Override Copy (uncheck vim override copy) . Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working. VS Code tips: - Indentation settings and the indentation status bar entry Low right // Tab Size\u02c7 > Indent using tabs > \u00a9 2. Convert indentation to tab/spaces: Low right // Tab Size\u02c7 > Convert indentation to Spaces || Convert indentation to Tabs. or VS code panel > R\u00a9 > Format document > HTML preview in VS Code Live Server by Ritwick Dey (Opens in Web browser only). *HTML Preview by Thomas Haakon Townsend (Deprecated). Markdown preview enhanced . Check out shd101wyy/markdown-preview-enhanced (Public). Unsplit an editor , go back from 2 code views to 1, same with terminal. To \"unsplit\" editor groups without closing any open files , use the menu-bars: View > Editor Layout > Single (or, while in the editor, press and release ALT and then type vls). Editor groups are also closed by default when they become empty. Wrap code Settings \u00bb Cmd+, //Code > Preferences > Settings > Editor: Word Wrap Controls how lines should wrap. Types of comments: Single-line comment. Syntax #This is a comment Example: #Single line comment echo \"hello world\" Multi-line comment. Syntax: : ' This is a Multi-line comments' Example: echo \"multiline comments\" : ' Print some word' Types of codes? ```bash {cmd} ls . ```javascript {cmd=\"node\"} const date = Date.now() console.log(date.toString()) ```erd {cdm:true, output:\u201dhtlm\u201d, args:[\u201c-i\u201d, \u201cinput_file\u201d, \u201c-f\u201d, \u201csvg]} [Person] *name Height Weight +birth_location_id [Location] *id City State Country Person *--1 Location ``` {r} #code written in R print(\u2018AIR Forum 2018\u2019)","title":"VS code:"},{"location":"","text":"Welcome to MkDocs Guide trial For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. Cnt+C - to stop server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"Guide trial For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. Cnt+C - to stop server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"ja/MkDocs/","text":"MkDocs MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. Start by reading the introductory tutorial, then check the User Guide for more information. Mkdocs Python - How to Create & Publish Documentations For Your Packages Alexys Jacob - Create beautiful and localized documentations and websites using MkDocs + Github MkDocs Materials : Documentation that simply works. Write your documentation in Markdown and create a professional static site in minutes \u2013 searchable, customizable, for all devices. MkDocs Themes top MkDocs Install. MkDocs official site User Guide Building Documentation with MkDocs The MkDocs Developer Guide provides documentation for users of MkDocs. See Getting Started for an introductory tutorial. You can jump directly to a page listed below, or use the next and previous buttons in the navigation bar at the top of the page to move through the documentation in order. - Installation - Writing Your Docs - Choosing Your Theme - Customizing Your Theme - Configuration - Deploying Your Docs HOW TO INSTALL MKDOCS ON MAC AND SETUP THE INTEGRATION TO GITHUB PAGES January 25, 2021 Summary: LOCAL SETUP ON MAC OS - brew brew --version ; - Python 3 python --version ; find&install brew list <formula1> || brew install <formula1> ; brew install python3 ; brew install python@3.10 - Pip : pip --version ; pip3 install --upgrade pip - MkDocs : pip3 install mkdocs (I used this install as described in guide); option: brew install mkdocs (error) - MkDocs Material Extensions : pip3 install mkdocs-material Other Plugins: - i18n : pip install mkdocs-static-i18n ; - Theme Materials: pip install mkdocs-material CONFIGURATION IN THE GITHUB PROJECT - GitHub CI - GitHub Pages - GitHub Branch MKDOCS INSTALLATION ON MAC STEP 1: VERIFY THE BREW INSTALLATION Check if intalled: brew \u2013version STEP 2: CHANGE THE FOLDER PERMISSION TO INSTALL PYTHON, IF NEEDED sudo chown -R $(whoami) /usr/local/lib/pkgconfig chmod u+w /usr/local/lib/pkgconfig STEP 3: INSTALL PYTHON3 To check if python and pip are installed use: python --version (Python 3.8.2) pip --version (pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8)) Or brew list <formula1> || brew install <formula1> If not installed use: brew install python3 20220704: Already Installed version 3.8, 3.9 I installed lates version: brew install python@3.10 Python has been installed as /usr/local/opt/python@3.10/bin/python3 Unversioned symlinks `python`, `python-config`, `pip` etc. pointing to `python3`, `python3-config`, `pip3` etc., respectively, have been installed into /usr/local/opt/python@3.10/libexec/bin You can install Python packages with /usr/local/opt/python@3.10/bin/pip3 install <package> They will install into the site-package directory /usr/local/lib/python3.10/site-packages tkinter is no longer included with this formula, but it is available separately: brew install python-tk@3.10 See: https://docs.brew.sh/Homebrew-and-Python python@3.10 is keg-only, which means it was not symlinked into /usr/local, because this is an alternate version of another formula. If you need to have python@3.10 first in your PATH, run: echo 'export PATH=\"/usr/local/opt/python@3.10/bin:$PATH\"' >> ~/.zshrc For compilers to find python@3.10 you may need to set: export LDFLAGS=\"-L/usr/local/opt/python@3.10/lib\" For pkg-config to find python@3.10 you may need to set: export PKG_CONFIG_PATH=\"/usr/local/opt/python@3.10/lib/pkgconfig\" ==> Summary \ud83c\udf7a /usr/local/Cellar/python@3.10/3.10.5: 3,137 files, 56.8MB ==> Running `brew cleanup python@3.10`... Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP. Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`). STEP 4: Install UPGRADE PIP pip \u2013version pip3 install --upgrade pip STEP 5: INSTALL MKDOCS pip3 install mkdocs (I used this install as described in guide). brew install mkdocs : Error: The `brew link` step did not complete successfully The formula built, but is not symlinked into /usr/local Could not symlink bin/mkdocs Target /usr/local/bin/mkdocs already exists. You may want to remove it: rm '/usr/local/bin/mkdocs' STEP 6: INSTALL MKDOCS-MATERIAL pip3 install mkdocs-material STEP 7: INSTALL MKDOCS-MATERIAL-EXTENSIONS pip3 install mkdocs-material-extensions VERIFY AND BUILD YOUR DOCUMENTATION STEP 1: ENSURE YOU HAVE THE MKDOCS.YML FILE IN PLACE Here is an example configuration for the mkdocs.yml file and here you find an example project, which is based on that configuration. top Documentation For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. Cnt+C - to stop server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - deploy to github. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. top To create a site: cd /Users/marcelorosales/Documents/GitHub/MkDocs/MkDocsTut220704 mkdocs new Hello-siteTest INFO - Creating project directory: Hello-siteTest INFO - Writing config file: Hello-siteTest/mkdocs.yml INFO - Writing initial docs: Hello-siteTest/docs/index.md Ls Hello-siteTest cd Hello-siteTest Tree . \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 index.md \u2514\u2500\u2500 mkdocs.yml code . In editor softw Modify mkdocs.yml, the site_name, site_url, Nav, etc. site_name: Hello-siteTest site_url: https://example.com_or_my.github nav: - Home: Index.md Save.. top Live Pre-view of the site (Local Server) In terminal. mkdocs serve INFO - Building documentation... INFO - Cleaning site directory INFO - Documentation built in 0.07 seconds INFO - [16:12:35] Watching paths for changes: 'docs', 'mkdocs.yml' INFO - [16:12:35] Serving on http://127.0.0.1:8000/ INFO - [16:13:00] Browser connected: http://127.0.0.1:8000/ top To create more Nav Tabs In editor: New File > language: .md > {# Name of the Tab or Section} > Save: {NewNavTabName} > Save Eg. NewNavTab1.md NewNavTab2.md Open mkdocs.yml > Add NavTabs file Names to Nav site_name: Hello-siteTest site_url: https://example.com_or_my.github nav: - Home: Index.md - New Nav Tab 1: NewNavTab1.md - New Nav Tab 2: NewNavTab2.md top MkDocs Themes In the mkdocs.yml file add a theme: Eg theme: readthedocs site_name: Test site site_url: https://example.com_or_my.github nav: - Home: index.md - New Nav Tab 1: NewNavTab1.md - New Nav Tab 2: NewNavTab2.md theme: readthedocs Other themes. theme: # name: readthedocs name: material top Add images/assets Stop server. Create assets/ in the docs/ . Insert images in the folder. In the Hom top Internationalization plugin. Pages Create the pages in the desired languages. Index.md --> Index.en.md | --> Index.jp.md | --> Index.es.md Add plugins to .yaml file plugins: - search # add search box. - i18n: # language plugin. default_language: en languages: en: English jp: \u65e5\u672c\u8a9e es: Espa\u00f1ol Then deploy: mkdocs serve May require Install plunging pip install mkdocs-static-i18n More info here Images Create the images in the desired languages and add the language as an extension . img.png --> img.en.png | --> img.ja.png | --> img.es.png WARNING - Language jp is not supported by mkdocs-material==8.3.8, not setting the 'theme.language' option. CORRECTION: is ja for Japanese, not jp. It works anyways\u203c! In md files just use the name of the image, plug in will automatically assign the language extension to the corresponding language .md file. Eg. ![imgName](assets/img.png) top To build site. Once site is finished, stop live preview Cnt+C In Terminal: mkdocs build INFO - Cleaning site directory INFO - Building documentation to directory: /Users/marcelorosales/Documents/GitHub/MkDocs/MkDocsTut220704/Hello-siteTest/site INFO - Documentation built in 0.11 seconds Will create all the files and folders required for an HTML site. top To deploy in Github. In terminal: (Make sure you are in the directory containing the site) mkdocs gh-deploy Revise this section Open Github Desktop Add > Add an existing repocitory > ..[].. > choose > path > add > ..[!\u2206!].. \u00a9 create a repository > \u2026[]\u2026 Name:{} > Description: {} > \u00a9 Create Repository. Commit > Description > \u00a9 Commit to main Go to my github.com > General > Danger zone > Change visibility > \u2026[]\u2026 Make public > Please type \u2026 to confirm. Go to Pages > Branch: \u00a9 gh-pages > \u00a9 root > save ` Your site is published at Error! Hyperlink reference not valid. After committing to github. Try later. top Automatic mkdocs gh-deploy and plugin extensions Use Github Actions to run mkdocs gh-deploy automatically when push new commits. .github/workflows/gh-deploy.yml [ ] Finish this section. Theme Materials Install pip install mkdocs-material top Material theme extension guide. Navigation Mkdocs Install MAC OS brew --version python --version brew install python3 # (not used) brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdocs brew install mkdocs # (not use) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n # (Internationalization plugin) pip install mkdocs-material","title":"MkDocs"},{"location":"ja/MkDocs/#mkdocs","text":"MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. Start by reading the introductory tutorial, then check the User Guide for more information. Mkdocs Python - How to Create & Publish Documentations For Your Packages Alexys Jacob - Create beautiful and localized documentations and websites using MkDocs + Github MkDocs Materials : Documentation that simply works. Write your documentation in Markdown and create a professional static site in minutes \u2013 searchable, customizable, for all devices. MkDocs Themes top","title":"MkDocs"},{"location":"ja/MkDocs/#mkdocs-install","text":"MkDocs official site User Guide Building Documentation with MkDocs The MkDocs Developer Guide provides documentation for users of MkDocs. See Getting Started for an introductory tutorial. You can jump directly to a page listed below, or use the next and previous buttons in the navigation bar at the top of the page to move through the documentation in order. - Installation - Writing Your Docs - Choosing Your Theme - Customizing Your Theme - Configuration - Deploying Your Docs HOW TO INSTALL MKDOCS ON MAC AND SETUP THE INTEGRATION TO GITHUB PAGES January 25, 2021 Summary: LOCAL SETUP ON MAC OS - brew brew --version ; - Python 3 python --version ; find&install brew list <formula1> || brew install <formula1> ; brew install python3 ; brew install python@3.10 - Pip : pip --version ; pip3 install --upgrade pip - MkDocs : pip3 install mkdocs (I used this install as described in guide); option: brew install mkdocs (error) - MkDocs Material Extensions : pip3 install mkdocs-material Other Plugins: - i18n : pip install mkdocs-static-i18n ; - Theme Materials: pip install mkdocs-material CONFIGURATION IN THE GITHUB PROJECT - GitHub CI - GitHub Pages - GitHub Branch MKDOCS INSTALLATION ON MAC STEP 1: VERIFY THE BREW INSTALLATION Check if intalled: brew \u2013version STEP 2: CHANGE THE FOLDER PERMISSION TO INSTALL PYTHON, IF NEEDED sudo chown -R $(whoami) /usr/local/lib/pkgconfig chmod u+w /usr/local/lib/pkgconfig STEP 3: INSTALL PYTHON3 To check if python and pip are installed use: python --version (Python 3.8.2) pip --version (pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8)) Or brew list <formula1> || brew install <formula1> If not installed use: brew install python3 20220704: Already Installed version 3.8, 3.9 I installed lates version: brew install python@3.10 Python has been installed as /usr/local/opt/python@3.10/bin/python3 Unversioned symlinks `python`, `python-config`, `pip` etc. pointing to `python3`, `python3-config`, `pip3` etc., respectively, have been installed into /usr/local/opt/python@3.10/libexec/bin You can install Python packages with /usr/local/opt/python@3.10/bin/pip3 install <package> They will install into the site-package directory /usr/local/lib/python3.10/site-packages tkinter is no longer included with this formula, but it is available separately: brew install python-tk@3.10 See: https://docs.brew.sh/Homebrew-and-Python python@3.10 is keg-only, which means it was not symlinked into /usr/local, because this is an alternate version of another formula. If you need to have python@3.10 first in your PATH, run: echo 'export PATH=\"/usr/local/opt/python@3.10/bin:$PATH\"' >> ~/.zshrc For compilers to find python@3.10 you may need to set: export LDFLAGS=\"-L/usr/local/opt/python@3.10/lib\" For pkg-config to find python@3.10 you may need to set: export PKG_CONFIG_PATH=\"/usr/local/opt/python@3.10/lib/pkgconfig\" ==> Summary \ud83c\udf7a /usr/local/Cellar/python@3.10/3.10.5: 3,137 files, 56.8MB ==> Running `brew cleanup python@3.10`... Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP. Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`). STEP 4: Install UPGRADE PIP pip \u2013version pip3 install --upgrade pip STEP 5: INSTALL MKDOCS pip3 install mkdocs (I used this install as described in guide). brew install mkdocs : Error: The `brew link` step did not complete successfully The formula built, but is not symlinked into /usr/local Could not symlink bin/mkdocs Target /usr/local/bin/mkdocs already exists. You may want to remove it: rm '/usr/local/bin/mkdocs' STEP 6: INSTALL MKDOCS-MATERIAL pip3 install mkdocs-material STEP 7: INSTALL MKDOCS-MATERIAL-EXTENSIONS pip3 install mkdocs-material-extensions VERIFY AND BUILD YOUR DOCUMENTATION STEP 1: ENSURE YOU HAVE THE MKDOCS.YML FILE IN PLACE Here is an example configuration for the mkdocs.yml file and here you find an example project, which is based on that configuration. top","title":"MkDocs Install."},{"location":"ja/MkDocs/#documentation","text":"For full documentation visit mkdocs.org .","title":"Documentation"},{"location":"ja/MkDocs/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. Cnt+C - to stop server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - deploy to github. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. top","title":"Commands"},{"location":"ja/MkDocs/#to-create-a-site","text":"cd /Users/marcelorosales/Documents/GitHub/MkDocs/MkDocsTut220704 mkdocs new Hello-siteTest INFO - Creating project directory: Hello-siteTest INFO - Writing config file: Hello-siteTest/mkdocs.yml INFO - Writing initial docs: Hello-siteTest/docs/index.md Ls Hello-siteTest cd Hello-siteTest Tree . \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 index.md \u2514\u2500\u2500 mkdocs.yml code . In editor softw Modify mkdocs.yml, the site_name, site_url, Nav, etc. site_name: Hello-siteTest site_url: https://example.com_or_my.github nav: - Home: Index.md Save.. top","title":"To create a site:"},{"location":"ja/MkDocs/#live-pre-view-of-the-site-local-server","text":"In terminal. mkdocs serve INFO - Building documentation... INFO - Cleaning site directory INFO - Documentation built in 0.07 seconds INFO - [16:12:35] Watching paths for changes: 'docs', 'mkdocs.yml' INFO - [16:12:35] Serving on http://127.0.0.1:8000/ INFO - [16:13:00] Browser connected: http://127.0.0.1:8000/ top","title":"Live Pre-view of the site (Local Server)"},{"location":"ja/MkDocs/#to-create-more-nav-tabs","text":"In editor: New File > language: .md > {# Name of the Tab or Section} > Save: {NewNavTabName} > Save Eg. NewNavTab1.md NewNavTab2.md Open mkdocs.yml > Add NavTabs file Names to Nav site_name: Hello-siteTest site_url: https://example.com_or_my.github nav: - Home: Index.md - New Nav Tab 1: NewNavTab1.md - New Nav Tab 2: NewNavTab2.md top","title":"To create more Nav Tabs"},{"location":"ja/MkDocs/#mkdocs-themes","text":"In the mkdocs.yml file add a theme: Eg theme: readthedocs site_name: Test site site_url: https://example.com_or_my.github nav: - Home: index.md - New Nav Tab 1: NewNavTab1.md - New Nav Tab 2: NewNavTab2.md theme: readthedocs Other themes. theme: # name: readthedocs name: material top","title":"MkDocs Themes"},{"location":"ja/MkDocs/#add-imagesassets","text":"Stop server. Create assets/ in the docs/ . Insert images in the folder. In the Hom top","title":"Add images/assets"},{"location":"ja/MkDocs/#internationalization-plugin","text":"","title":"Internationalization plugin."},{"location":"ja/MkDocs/#pages","text":"Create the pages in the desired languages. Index.md --> Index.en.md | --> Index.jp.md | --> Index.es.md Add plugins to .yaml file plugins: - search # add search box. - i18n: # language plugin. default_language: en languages: en: English jp: \u65e5\u672c\u8a9e es: Espa\u00f1ol Then deploy: mkdocs serve May require Install plunging pip install mkdocs-static-i18n More info here","title":"Pages"},{"location":"ja/MkDocs/#images","text":"Create the images in the desired languages and add the language as an extension . img.png --> img.en.png | --> img.ja.png | --> img.es.png WARNING - Language jp is not supported by mkdocs-material==8.3.8, not setting the 'theme.language' option. CORRECTION: is ja for Japanese, not jp. It works anyways\u203c! In md files just use the name of the image, plug in will automatically assign the language extension to the corresponding language .md file. Eg. ![imgName](assets/img.png) top","title":"Images"},{"location":"ja/MkDocs/#to-build-site","text":"Once site is finished, stop live preview Cnt+C In Terminal: mkdocs build INFO - Cleaning site directory INFO - Building documentation to directory: /Users/marcelorosales/Documents/GitHub/MkDocs/MkDocsTut220704/Hello-siteTest/site INFO - Documentation built in 0.11 seconds Will create all the files and folders required for an HTML site. top","title":"To build site."},{"location":"ja/MkDocs/#to-deploy-in-github","text":"In terminal: (Make sure you are in the directory containing the site) mkdocs gh-deploy Revise this section Open Github Desktop Add > Add an existing repocitory > ..[].. > choose > path > add > ..[!\u2206!].. \u00a9 create a repository > \u2026[]\u2026 Name:{} > Description: {} > \u00a9 Create Repository. Commit > Description > \u00a9 Commit to main Go to my github.com > General > Danger zone > Change visibility > \u2026[]\u2026 Make public > Please type \u2026 to confirm. Go to Pages > Branch: \u00a9 gh-pages > \u00a9 root > save ` Your site is published at Error! Hyperlink reference not valid. After committing to github. Try later. top","title":"To deploy in Github."},{"location":"ja/MkDocs/#automatic-mkdocs-gh-deploy-and-plugin-extensions","text":"Use Github Actions to run mkdocs gh-deploy automatically when push new commits. .github/workflows/gh-deploy.yml [ ] Finish this section. Theme Materials Install pip install mkdocs-material top","title":"Automatic mkdocs gh-deploy and plugin extensions"},{"location":"ja/MkDocs/#material-theme-extension-guide","text":"Navigation","title":"Material theme extension guide."},{"location":"ja/MkDocs/#mkdocs-install-mac-os","text":"brew --version python --version brew install python3 # (not used) brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdocs brew install mkdocs # (not use) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n # (Internationalization plugin) pip install mkdocs-material","title":"Mkdocs Install MAC OS"},{"location":"ja/VS_Code/","text":"VS code: VS Code key shortcuts Shft+Cmd+P \u00bb show all commands, search key shortcuts. Cmd+P \u00bb Go to file (open). Cont+Tab \u00bb Switch between Tabs/Pages. Cmd+W \u00bb close file. Shift+Cmd+F \u00bb Find in File. F5 \u00bb Start debugging. Cont+ \u00bb Toggle Terminal. shift+Cmd+X \u00bb Extensions. Don't Use the Sidebar in VS Code!! vid Extensions Recomended: Advanced-new-file by patbenatar. File Utils by Steffen Leistner. Setting Sync on: Account -> Github. Extensions installed How to install extension: -> Open VS code > Extensions (shift+Cmd+X) > search: extension name > \u00a9Install button. Top 40+ VSCode Extensions for Developers in 2022 Link Top 10 VSCode extensions to use in 2022 Markdown-preview-enhanced by Yiyi Wang. Live Preview by Microsoft vid Markdown All in One by Yu Zhang, link R by REditorSupport GitLens \u2014 Git supercharged by GitKraken YAML by Red hat. Auto Rename Tag by TabNine. Peacock by John Papa. Colorize by kamikillerto. Code Runner by Jun Han. To run only a small snippet of code. Auto rename tag by Jun Han. Vim by vscodevim (need this emulator? Probably not, it just gives you some special shortcuts do not install ).. Warning. This extension will Override Rich Text Copy/Paste of VS. Copy and Paste code into Word, Ignores Syntax Highlighting (When copy code and paste in Word, code colors will no longer be applied). 1. Make sure that // Code > Preferences> Settings > Text Editor > \u221a Editor: Copy With Syntax Highlighting (is checked) . Controls whether syntax highlighting should be copied into the clipboard. 1. To solve: shift+Cmd+P > type: copy > in: Vim: !\u00a9 Override Copy (uncheck vim override copy) . Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working. VS Code tips: - Indentation settings and the indentation status bar entry Low right // Tab Size\u02c7 > Indent using tabs > \u00a9 2. Convert indentation to tab/spaces: Low right // Tab Size\u02c7 > Convert indentation to Spaces || Convert indentation to Tabs. or VS code panel > R\u00a9 > Format document > HTML preview in VS Code Live Server by Ritwick Dey (Opens in Web browser only). *HTML Preview by Thomas Haakon Townsend (Deprecated). Markdown preview enhanced . Check out shd101wyy/markdown-preview-enhanced (Public). Unsplit an editor , go back from 2 code views to 1, same with terminal. To \"unsplit\" editor groups without closing any open files , use the menu-bars: View > Editor Layout > Single (or, while in the editor, press and release ALT and then type vls). Editor groups are also closed by default when they become empty. Wrap code Settings \u00bb Cmd+, //Code > Preferences > Settings > Editor: Word Wrap Controls how lines should wrap. Types of comments: Single-line comment. Syntax #This is a comment Example: #Single line comment echo \"hello world\" Multi-line comment. Syntax: : ' This is a Multi-line comments' Example: echo \"multiline comments\" : ' Print some word' Types of codes? ```bash {cmd} ls . ```javascript {cmd=\"node\"} const date = Date.now() console.log(date.toString()) ```erd {cdm:true, output:\u201dhtlm\u201d, args:[\u201c-i\u201d, \u201cinput_file\u201d, \u201c-f\u201d, \u201csvg]} [Person] *name Height Weight +birth_location_id [Location] *id City State Country Person *--1 Location ``` {r} #code written in R print(\u2018AIR Forum 2018\u2019)","title":"VS_Code"},{"location":"ja/VS_Code/#vs-code","text":"VS Code key shortcuts Shft+Cmd+P \u00bb show all commands, search key shortcuts. Cmd+P \u00bb Go to file (open). Cont+Tab \u00bb Switch between Tabs/Pages. Cmd+W \u00bb close file. Shift+Cmd+F \u00bb Find in File. F5 \u00bb Start debugging. Cont+ \u00bb Toggle Terminal. shift+Cmd+X \u00bb Extensions. Don't Use the Sidebar in VS Code!! vid Extensions Recomended: Advanced-new-file by patbenatar. File Utils by Steffen Leistner. Setting Sync on: Account -> Github. Extensions installed How to install extension: -> Open VS code > Extensions (shift+Cmd+X) > search: extension name > \u00a9Install button. Top 40+ VSCode Extensions for Developers in 2022 Link Top 10 VSCode extensions to use in 2022 Markdown-preview-enhanced by Yiyi Wang. Live Preview by Microsoft vid Markdown All in One by Yu Zhang, link R by REditorSupport GitLens \u2014 Git supercharged by GitKraken YAML by Red hat. Auto Rename Tag by TabNine. Peacock by John Papa. Colorize by kamikillerto. Code Runner by Jun Han. To run only a small snippet of code. Auto rename tag by Jun Han. Vim by vscodevim (need this emulator? Probably not, it just gives you some special shortcuts do not install ).. Warning. This extension will Override Rich Text Copy/Paste of VS. Copy and Paste code into Word, Ignores Syntax Highlighting (When copy code and paste in Word, code colors will no longer be applied). 1. Make sure that // Code > Preferences> Settings > Text Editor > \u221a Editor: Copy With Syntax Highlighting (is checked) . Controls whether syntax highlighting should be copied into the clipboard. 1. To solve: shift+Cmd+P > type: copy > in: Vim: !\u00a9 Override Copy (uncheck vim override copy) . Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working. VS Code tips: - Indentation settings and the indentation status bar entry Low right // Tab Size\u02c7 > Indent using tabs > \u00a9 2. Convert indentation to tab/spaces: Low right // Tab Size\u02c7 > Convert indentation to Spaces || Convert indentation to Tabs. or VS code panel > R\u00a9 > Format document > HTML preview in VS Code Live Server by Ritwick Dey (Opens in Web browser only). *HTML Preview by Thomas Haakon Townsend (Deprecated). Markdown preview enhanced . Check out shd101wyy/markdown-preview-enhanced (Public). Unsplit an editor , go back from 2 code views to 1, same with terminal. To \"unsplit\" editor groups without closing any open files , use the menu-bars: View > Editor Layout > Single (or, while in the editor, press and release ALT and then type vls). Editor groups are also closed by default when they become empty. Wrap code Settings \u00bb Cmd+, //Code > Preferences > Settings > Editor: Word Wrap Controls how lines should wrap. Types of comments: Single-line comment. Syntax #This is a comment Example: #Single line comment echo \"hello world\" Multi-line comment. Syntax: : ' This is a Multi-line comments' Example: echo \"multiline comments\" : ' Print some word' Types of codes? ```bash {cmd} ls . ```javascript {cmd=\"node\"} const date = Date.now() console.log(date.toString()) ```erd {cdm:true, output:\u201dhtlm\u201d, args:[\u201c-i\u201d, \u201cinput_file\u201d, \u201c-f\u201d, \u201csvg]} [Person] *name Height Weight +birth_location_id [Location] *id City State Country Person *--1 Location ``` {r} #code written in R print(\u2018AIR Forum 2018\u2019)","title":"VS code:"},{"location":"ja/","text":"MkDocs\u3000\u306b\u3000\u3088\u3046\u3053\u305d\uff01 \u65e5\u672c\u8a9e\u306e\u30ac\u30a4\u30c9 \u65e5\u672c\u8a9e\u3067\u30da\u30fc\u30b8\u3067\u3059\u3002","title":"Home"},{"location":"ja/#mkdocs","text":"\u65e5\u672c\u8a9e\u306e\u30ac\u30a4\u30c9 \u65e5\u672c\u8a9e\u3067\u30da\u30fc\u30b8\u3067\u3059\u3002","title":"MkDocs\u3000\u306b\u3000\u3088\u3046\u3053\u305d\uff01"},{"location":"es/MkDocs/","text":"MkDocs MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. Start by reading the introductory tutorial, then check the User Guide for more information. Mkdocs Python - How to Create & Publish Documentations For Your Packages Alexys Jacob - Create beautiful and localized documentations and websites using MkDocs + Github MkDocs Materials : Documentation that simply works. Write your documentation in Markdown and create a professional static site in minutes \u2013 searchable, customizable, for all devices. MkDocs Themes top MkDocs Install. MkDocs official site User Guide Building Documentation with MkDocs The MkDocs Developer Guide provides documentation for users of MkDocs. See Getting Started for an introductory tutorial. You can jump directly to a page listed below, or use the next and previous buttons in the navigation bar at the top of the page to move through the documentation in order. - Installation - Writing Your Docs - Choosing Your Theme - Customizing Your Theme - Configuration - Deploying Your Docs HOW TO INSTALL MKDOCS ON MAC AND SETUP THE INTEGRATION TO GITHUB PAGES January 25, 2021 Summary: LOCAL SETUP ON MAC OS - brew brew --version ; - Python 3 python --version ; find&install brew list <formula1> || brew install <formula1> ; brew install python3 ; brew install python@3.10 - Pip : pip --version ; pip3 install --upgrade pip - MkDocs : pip3 install mkdocs (I used this install as described in guide); option: brew install mkdocs (error) - MkDocs Material Extensions : pip3 install mkdocs-material Other Plugins: - i18n : pip install mkdocs-static-i18n ; - Theme Materials: pip install mkdocs-material CONFIGURATION IN THE GITHUB PROJECT - GitHub CI - GitHub Pages - GitHub Branch MKDOCS INSTALLATION ON MAC STEP 1: VERIFY THE BREW INSTALLATION Check if intalled: brew \u2013version STEP 2: CHANGE THE FOLDER PERMISSION TO INSTALL PYTHON, IF NEEDED sudo chown -R $(whoami) /usr/local/lib/pkgconfig chmod u+w /usr/local/lib/pkgconfig STEP 3: INSTALL PYTHON3 To check if python and pip are installed use: python --version (Python 3.8.2) pip --version (pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8)) Or brew list <formula1> || brew install <formula1> If not installed use: brew install python3 20220704: Already Installed version 3.8, 3.9 I installed lates version: brew install python@3.10 Python has been installed as /usr/local/opt/python@3.10/bin/python3 Unversioned symlinks `python`, `python-config`, `pip` etc. pointing to `python3`, `python3-config`, `pip3` etc., respectively, have been installed into /usr/local/opt/python@3.10/libexec/bin You can install Python packages with /usr/local/opt/python@3.10/bin/pip3 install <package> They will install into the site-package directory /usr/local/lib/python3.10/site-packages tkinter is no longer included with this formula, but it is available separately: brew install python-tk@3.10 See: https://docs.brew.sh/Homebrew-and-Python python@3.10 is keg-only, which means it was not symlinked into /usr/local, because this is an alternate version of another formula. If you need to have python@3.10 first in your PATH, run: echo 'export PATH=\"/usr/local/opt/python@3.10/bin:$PATH\"' >> ~/.zshrc For compilers to find python@3.10 you may need to set: export LDFLAGS=\"-L/usr/local/opt/python@3.10/lib\" For pkg-config to find python@3.10 you may need to set: export PKG_CONFIG_PATH=\"/usr/local/opt/python@3.10/lib/pkgconfig\" ==> Summary \ud83c\udf7a /usr/local/Cellar/python@3.10/3.10.5: 3,137 files, 56.8MB ==> Running `brew cleanup python@3.10`... Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP. Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`). STEP 4: Install UPGRADE PIP pip \u2013version pip3 install --upgrade pip STEP 5: INSTALL MKDOCS pip3 install mkdocs (I used this install as described in guide). brew install mkdocs : Error: The `brew link` step did not complete successfully The formula built, but is not symlinked into /usr/local Could not symlink bin/mkdocs Target /usr/local/bin/mkdocs already exists. You may want to remove it: rm '/usr/local/bin/mkdocs' STEP 6: INSTALL MKDOCS-MATERIAL pip3 install mkdocs-material STEP 7: INSTALL MKDOCS-MATERIAL-EXTENSIONS pip3 install mkdocs-material-extensions VERIFY AND BUILD YOUR DOCUMENTATION STEP 1: ENSURE YOU HAVE THE MKDOCS.YML FILE IN PLACE Here is an example configuration for the mkdocs.yml file and here you find an example project, which is based on that configuration. top Documentation For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. Cnt+C - to stop server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - deploy to github. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. top To create a site: cd /Users/marcelorosales/Documents/GitHub/MkDocs/MkDocsTut220704 mkdocs new Hello-siteTest INFO - Creating project directory: Hello-siteTest INFO - Writing config file: Hello-siteTest/mkdocs.yml INFO - Writing initial docs: Hello-siteTest/docs/index.md Ls Hello-siteTest cd Hello-siteTest Tree . \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 index.md \u2514\u2500\u2500 mkdocs.yml code . In editor softw Modify mkdocs.yml, the site_name, site_url, Nav, etc. site_name: Hello-siteTest site_url: https://example.com_or_my.github nav: - Home: Index.md Save.. top Live Pre-view of the site (Local Server) In terminal. mkdocs serve INFO - Building documentation... INFO - Cleaning site directory INFO - Documentation built in 0.07 seconds INFO - [16:12:35] Watching paths for changes: 'docs', 'mkdocs.yml' INFO - [16:12:35] Serving on http://127.0.0.1:8000/ INFO - [16:13:00] Browser connected: http://127.0.0.1:8000/ top To create more Nav Tabs In editor: New File > language: .md > {# Name of the Tab or Section} > Save: {NewNavTabName} > Save Eg. NewNavTab1.md NewNavTab2.md Open mkdocs.yml > Add NavTabs file Names to Nav site_name: Hello-siteTest site_url: https://example.com_or_my.github nav: - Home: Index.md - New Nav Tab 1: NewNavTab1.md - New Nav Tab 2: NewNavTab2.md top MkDocs Themes In the mkdocs.yml file add a theme: Eg theme: readthedocs site_name: Test site site_url: https://example.com_or_my.github nav: - Home: index.md - New Nav Tab 1: NewNavTab1.md - New Nav Tab 2: NewNavTab2.md theme: readthedocs Other themes. theme: # name: readthedocs name: material top Add images/assets Stop server. Create assets/ in the docs/ . Insert images in the folder. In the Hom top Internationalization plugin. Pages Create the pages in the desired languages. Index.md --> Index.en.md | --> Index.jp.md | --> Index.es.md Add plugins to .yaml file plugins: - search # add search box. - i18n: # language plugin. default_language: en languages: en: English jp: \u65e5\u672c\u8a9e es: Espa\u00f1ol Then deploy: mkdocs serve May require Install plunging pip install mkdocs-static-i18n More info here Images Create the images in the desired languages and add the language as an extension . img.png --> img.en.png | --> img.ja.png | --> img.es.png WARNING - Language jp is not supported by mkdocs-material==8.3.8, not setting the 'theme.language' option. CORRECTION: is ja for Japanese, not jp. It works anyways\u203c! In md files just use the name of the image, plug in will automatically assign the language extension to the corresponding language .md file. Eg. ![imgName](assets/img.png) top To build site. Once site is finished, stop live preview Cnt+C In Terminal: mkdocs build INFO - Cleaning site directory INFO - Building documentation to directory: /Users/marcelorosales/Documents/GitHub/MkDocs/MkDocsTut220704/Hello-siteTest/site INFO - Documentation built in 0.11 seconds Will create all the files and folders required for an HTML site. top To deploy in Github. In terminal: (Make sure you are in the directory containing the site) mkdocs gh-deploy Revise this section Open Github Desktop Add > Add an existing repocitory > ..[].. > choose > path > add > ..[!\u2206!].. \u00a9 create a repository > \u2026[]\u2026 Name:{} > Description: {} > \u00a9 Create Repository. Commit > Description > \u00a9 Commit to main Go to my github.com > General > Danger zone > Change visibility > \u2026[]\u2026 Make public > Please type \u2026 to confirm. Go to Pages > Branch: \u00a9 gh-pages > \u00a9 root > save ` Your site is published at Error! Hyperlink reference not valid. After committing to github. Try later. top Automatic mkdocs gh-deploy and plugin extensions Use Github Actions to run mkdocs gh-deploy automatically when push new commits. .github/workflows/gh-deploy.yml [ ] Finish this section. Theme Materials Install pip install mkdocs-material top Material theme extension guide. Navigation Mkdocs Install MAC OS brew --version python --version brew install python3 # (not used) brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdocs brew install mkdocs # (not use) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n # (Internationalization plugin) pip install mkdocs-material","title":"MkDocs"},{"location":"es/MkDocs/#mkdocs","text":"MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. Start by reading the introductory tutorial, then check the User Guide for more information. Mkdocs Python - How to Create & Publish Documentations For Your Packages Alexys Jacob - Create beautiful and localized documentations and websites using MkDocs + Github MkDocs Materials : Documentation that simply works. Write your documentation in Markdown and create a professional static site in minutes \u2013 searchable, customizable, for all devices. MkDocs Themes top","title":"MkDocs"},{"location":"es/MkDocs/#mkdocs-install","text":"MkDocs official site User Guide Building Documentation with MkDocs The MkDocs Developer Guide provides documentation for users of MkDocs. See Getting Started for an introductory tutorial. You can jump directly to a page listed below, or use the next and previous buttons in the navigation bar at the top of the page to move through the documentation in order. - Installation - Writing Your Docs - Choosing Your Theme - Customizing Your Theme - Configuration - Deploying Your Docs HOW TO INSTALL MKDOCS ON MAC AND SETUP THE INTEGRATION TO GITHUB PAGES January 25, 2021 Summary: LOCAL SETUP ON MAC OS - brew brew --version ; - Python 3 python --version ; find&install brew list <formula1> || brew install <formula1> ; brew install python3 ; brew install python@3.10 - Pip : pip --version ; pip3 install --upgrade pip - MkDocs : pip3 install mkdocs (I used this install as described in guide); option: brew install mkdocs (error) - MkDocs Material Extensions : pip3 install mkdocs-material Other Plugins: - i18n : pip install mkdocs-static-i18n ; - Theme Materials: pip install mkdocs-material CONFIGURATION IN THE GITHUB PROJECT - GitHub CI - GitHub Pages - GitHub Branch MKDOCS INSTALLATION ON MAC STEP 1: VERIFY THE BREW INSTALLATION Check if intalled: brew \u2013version STEP 2: CHANGE THE FOLDER PERMISSION TO INSTALL PYTHON, IF NEEDED sudo chown -R $(whoami) /usr/local/lib/pkgconfig chmod u+w /usr/local/lib/pkgconfig STEP 3: INSTALL PYTHON3 To check if python and pip are installed use: python --version (Python 3.8.2) pip --version (pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8)) Or brew list <formula1> || brew install <formula1> If not installed use: brew install python3 20220704: Already Installed version 3.8, 3.9 I installed lates version: brew install python@3.10 Python has been installed as /usr/local/opt/python@3.10/bin/python3 Unversioned symlinks `python`, `python-config`, `pip` etc. pointing to `python3`, `python3-config`, `pip3` etc., respectively, have been installed into /usr/local/opt/python@3.10/libexec/bin You can install Python packages with /usr/local/opt/python@3.10/bin/pip3 install <package> They will install into the site-package directory /usr/local/lib/python3.10/site-packages tkinter is no longer included with this formula, but it is available separately: brew install python-tk@3.10 See: https://docs.brew.sh/Homebrew-and-Python python@3.10 is keg-only, which means it was not symlinked into /usr/local, because this is an alternate version of another formula. If you need to have python@3.10 first in your PATH, run: echo 'export PATH=\"/usr/local/opt/python@3.10/bin:$PATH\"' >> ~/.zshrc For compilers to find python@3.10 you may need to set: export LDFLAGS=\"-L/usr/local/opt/python@3.10/lib\" For pkg-config to find python@3.10 you may need to set: export PKG_CONFIG_PATH=\"/usr/local/opt/python@3.10/lib/pkgconfig\" ==> Summary \ud83c\udf7a /usr/local/Cellar/python@3.10/3.10.5: 3,137 files, 56.8MB ==> Running `brew cleanup python@3.10`... Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP. Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`). STEP 4: Install UPGRADE PIP pip \u2013version pip3 install --upgrade pip STEP 5: INSTALL MKDOCS pip3 install mkdocs (I used this install as described in guide). brew install mkdocs : Error: The `brew link` step did not complete successfully The formula built, but is not symlinked into /usr/local Could not symlink bin/mkdocs Target /usr/local/bin/mkdocs already exists. You may want to remove it: rm '/usr/local/bin/mkdocs' STEP 6: INSTALL MKDOCS-MATERIAL pip3 install mkdocs-material STEP 7: INSTALL MKDOCS-MATERIAL-EXTENSIONS pip3 install mkdocs-material-extensions VERIFY AND BUILD YOUR DOCUMENTATION STEP 1: ENSURE YOU HAVE THE MKDOCS.YML FILE IN PLACE Here is an example configuration for the mkdocs.yml file and here you find an example project, which is based on that configuration. top","title":"MkDocs Install."},{"location":"es/MkDocs/#documentation","text":"For full documentation visit mkdocs.org .","title":"Documentation"},{"location":"es/MkDocs/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. Cnt+C - to stop server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - deploy to github. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. top","title":"Commands"},{"location":"es/MkDocs/#to-create-a-site","text":"cd /Users/marcelorosales/Documents/GitHub/MkDocs/MkDocsTut220704 mkdocs new Hello-siteTest INFO - Creating project directory: Hello-siteTest INFO - Writing config file: Hello-siteTest/mkdocs.yml INFO - Writing initial docs: Hello-siteTest/docs/index.md Ls Hello-siteTest cd Hello-siteTest Tree . \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 index.md \u2514\u2500\u2500 mkdocs.yml code . In editor softw Modify mkdocs.yml, the site_name, site_url, Nav, etc. site_name: Hello-siteTest site_url: https://example.com_or_my.github nav: - Home: Index.md Save.. top","title":"To create a site:"},{"location":"es/MkDocs/#live-pre-view-of-the-site-local-server","text":"In terminal. mkdocs serve INFO - Building documentation... INFO - Cleaning site directory INFO - Documentation built in 0.07 seconds INFO - [16:12:35] Watching paths for changes: 'docs', 'mkdocs.yml' INFO - [16:12:35] Serving on http://127.0.0.1:8000/ INFO - [16:13:00] Browser connected: http://127.0.0.1:8000/ top","title":"Live Pre-view of the site (Local Server)"},{"location":"es/MkDocs/#to-create-more-nav-tabs","text":"In editor: New File > language: .md > {# Name of the Tab or Section} > Save: {NewNavTabName} > Save Eg. NewNavTab1.md NewNavTab2.md Open mkdocs.yml > Add NavTabs file Names to Nav site_name: Hello-siteTest site_url: https://example.com_or_my.github nav: - Home: Index.md - New Nav Tab 1: NewNavTab1.md - New Nav Tab 2: NewNavTab2.md top","title":"To create more Nav Tabs"},{"location":"es/MkDocs/#mkdocs-themes","text":"In the mkdocs.yml file add a theme: Eg theme: readthedocs site_name: Test site site_url: https://example.com_or_my.github nav: - Home: index.md - New Nav Tab 1: NewNavTab1.md - New Nav Tab 2: NewNavTab2.md theme: readthedocs Other themes. theme: # name: readthedocs name: material top","title":"MkDocs Themes"},{"location":"es/MkDocs/#add-imagesassets","text":"Stop server. Create assets/ in the docs/ . Insert images in the folder. In the Hom top","title":"Add images/assets"},{"location":"es/MkDocs/#internationalization-plugin","text":"","title":"Internationalization plugin."},{"location":"es/MkDocs/#pages","text":"Create the pages in the desired languages. Index.md --> Index.en.md | --> Index.jp.md | --> Index.es.md Add plugins to .yaml file plugins: - search # add search box. - i18n: # language plugin. default_language: en languages: en: English jp: \u65e5\u672c\u8a9e es: Espa\u00f1ol Then deploy: mkdocs serve May require Install plunging pip install mkdocs-static-i18n More info here","title":"Pages"},{"location":"es/MkDocs/#images","text":"Create the images in the desired languages and add the language as an extension . img.png --> img.en.png | --> img.ja.png | --> img.es.png WARNING - Language jp is not supported by mkdocs-material==8.3.8, not setting the 'theme.language' option. CORRECTION: is ja for Japanese, not jp. It works anyways\u203c! In md files just use the name of the image, plug in will automatically assign the language extension to the corresponding language .md file. Eg. ![imgName](assets/img.png) top","title":"Images"},{"location":"es/MkDocs/#to-build-site","text":"Once site is finished, stop live preview Cnt+C In Terminal: mkdocs build INFO - Cleaning site directory INFO - Building documentation to directory: /Users/marcelorosales/Documents/GitHub/MkDocs/MkDocsTut220704/Hello-siteTest/site INFO - Documentation built in 0.11 seconds Will create all the files and folders required for an HTML site. top","title":"To build site."},{"location":"es/MkDocs/#to-deploy-in-github","text":"In terminal: (Make sure you are in the directory containing the site) mkdocs gh-deploy Revise this section Open Github Desktop Add > Add an existing repocitory > ..[].. > choose > path > add > ..[!\u2206!].. \u00a9 create a repository > \u2026[]\u2026 Name:{} > Description: {} > \u00a9 Create Repository. Commit > Description > \u00a9 Commit to main Go to my github.com > General > Danger zone > Change visibility > \u2026[]\u2026 Make public > Please type \u2026 to confirm. Go to Pages > Branch: \u00a9 gh-pages > \u00a9 root > save ` Your site is published at Error! Hyperlink reference not valid. After committing to github. Try later. top","title":"To deploy in Github."},{"location":"es/MkDocs/#automatic-mkdocs-gh-deploy-and-plugin-extensions","text":"Use Github Actions to run mkdocs gh-deploy automatically when push new commits. .github/workflows/gh-deploy.yml [ ] Finish this section. Theme Materials Install pip install mkdocs-material top","title":"Automatic mkdocs gh-deploy and plugin extensions"},{"location":"es/MkDocs/#material-theme-extension-guide","text":"Navigation","title":"Material theme extension guide."},{"location":"es/MkDocs/#mkdocs-install-mac-os","text":"brew --version python --version brew install python3 # (not used) brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdocs brew install mkdocs # (not use) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n # (Internationalization plugin) pip install mkdocs-material","title":"Mkdocs Install MAC OS"},{"location":"es/VS_Code/","text":"VS code: VS Code key shortcuts Shft+Cmd+P \u00bb show all commands, search key shortcuts. Cmd+P \u00bb Go to file (open). Cont+Tab \u00bb Switch between Tabs/Pages. Cmd+W \u00bb close file. Shift+Cmd+F \u00bb Find in File. F5 \u00bb Start debugging. Cont+ \u00bb Toggle Terminal. shift+Cmd+X \u00bb Extensions. Don't Use the Sidebar in VS Code!! vid Extensions Recomended: Advanced-new-file by patbenatar. File Utils by Steffen Leistner. Setting Sync on: Account -> Github. Extensions installed How to install extension: -> Open VS code > Extensions (shift+Cmd+X) > search: extension name > \u00a9Install button. Top 40+ VSCode Extensions for Developers in 2022 Link Top 10 VSCode extensions to use in 2022 Markdown-preview-enhanced by Yiyi Wang. Live Preview by Microsoft vid Markdown All in One by Yu Zhang, link R by REditorSupport GitLens \u2014 Git supercharged by GitKraken YAML by Red hat. Auto Rename Tag by TabNine. Peacock by John Papa. Colorize by kamikillerto. Code Runner by Jun Han. To run only a small snippet of code. Auto rename tag by Jun Han. Vim by vscodevim (need this emulator? Probably not, it just gives you some special shortcuts do not install ).. Warning. This extension will Override Rich Text Copy/Paste of VS. Copy and Paste code into Word, Ignores Syntax Highlighting (When copy code and paste in Word, code colors will no longer be applied). 1. Make sure that // Code > Preferences> Settings > Text Editor > \u221a Editor: Copy With Syntax Highlighting (is checked) . Controls whether syntax highlighting should be copied into the clipboard. 1. To solve: shift+Cmd+P > type: copy > in: Vim: !\u00a9 Override Copy (uncheck vim override copy) . Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working. VS Code tips: - Indentation settings and the indentation status bar entry Low right // Tab Size\u02c7 > Indent using tabs > \u00a9 2. Convert indentation to tab/spaces: Low right // Tab Size\u02c7 > Convert indentation to Spaces || Convert indentation to Tabs. or VS code panel > R\u00a9 > Format document > HTML preview in VS Code Live Server by Ritwick Dey (Opens in Web browser only). *HTML Preview by Thomas Haakon Townsend (Deprecated). Markdown preview enhanced . Check out shd101wyy/markdown-preview-enhanced (Public). Unsplit an editor , go back from 2 code views to 1, same with terminal. To \"unsplit\" editor groups without closing any open files , use the menu-bars: View > Editor Layout > Single (or, while in the editor, press and release ALT and then type vls). Editor groups are also closed by default when they become empty. Wrap code Settings \u00bb Cmd+, //Code > Preferences > Settings > Editor: Word Wrap Controls how lines should wrap. Types of comments: Single-line comment. Syntax #This is a comment Example: #Single line comment echo \"hello world\" Multi-line comment. Syntax: : ' This is a Multi-line comments' Example: echo \"multiline comments\" : ' Print some word' Types of codes? ```bash {cmd} ls . ```javascript {cmd=\"node\"} const date = Date.now() console.log(date.toString()) ```erd {cdm:true, output:\u201dhtlm\u201d, args:[\u201c-i\u201d, \u201cinput_file\u201d, \u201c-f\u201d, \u201csvg]} [Person] *name Height Weight +birth_location_id [Location] *id City State Country Person *--1 Location ``` {r} #code written in R print(\u2018AIR Forum 2018\u2019)","title":"VS_Code"},{"location":"es/VS_Code/#vs-code","text":"VS Code key shortcuts Shft+Cmd+P \u00bb show all commands, search key shortcuts. Cmd+P \u00bb Go to file (open). Cont+Tab \u00bb Switch between Tabs/Pages. Cmd+W \u00bb close file. Shift+Cmd+F \u00bb Find in File. F5 \u00bb Start debugging. Cont+ \u00bb Toggle Terminal. shift+Cmd+X \u00bb Extensions. Don't Use the Sidebar in VS Code!! vid Extensions Recomended: Advanced-new-file by patbenatar. File Utils by Steffen Leistner. Setting Sync on: Account -> Github. Extensions installed How to install extension: -> Open VS code > Extensions (shift+Cmd+X) > search: extension name > \u00a9Install button. Top 40+ VSCode Extensions for Developers in 2022 Link Top 10 VSCode extensions to use in 2022 Markdown-preview-enhanced by Yiyi Wang. Live Preview by Microsoft vid Markdown All in One by Yu Zhang, link R by REditorSupport GitLens \u2014 Git supercharged by GitKraken YAML by Red hat. Auto Rename Tag by TabNine. Peacock by John Papa. Colorize by kamikillerto. Code Runner by Jun Han. To run only a small snippet of code. Auto rename tag by Jun Han. Vim by vscodevim (need this emulator? Probably not, it just gives you some special shortcuts do not install ).. Warning. This extension will Override Rich Text Copy/Paste of VS. Copy and Paste code into Word, Ignores Syntax Highlighting (When copy code and paste in Word, code colors will no longer be applied). 1. Make sure that // Code > Preferences> Settings > Text Editor > \u221a Editor: Copy With Syntax Highlighting (is checked) . Controls whether syntax highlighting should be copied into the clipboard. 1. To solve: shift+Cmd+P > type: copy > in: Vim: !\u00a9 Override Copy (uncheck vim override copy) . Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working. VS Code tips: - Indentation settings and the indentation status bar entry Low right // Tab Size\u02c7 > Indent using tabs > \u00a9 2. Convert indentation to tab/spaces: Low right // Tab Size\u02c7 > Convert indentation to Spaces || Convert indentation to Tabs. or VS code panel > R\u00a9 > Format document > HTML preview in VS Code Live Server by Ritwick Dey (Opens in Web browser only). *HTML Preview by Thomas Haakon Townsend (Deprecated). Markdown preview enhanced . Check out shd101wyy/markdown-preview-enhanced (Public). Unsplit an editor , go back from 2 code views to 1, same with terminal. To \"unsplit\" editor groups without closing any open files , use the menu-bars: View > Editor Layout > Single (or, while in the editor, press and release ALT and then type vls). Editor groups are also closed by default when they become empty. Wrap code Settings \u00bb Cmd+, //Code > Preferences > Settings > Editor: Word Wrap Controls how lines should wrap. Types of comments: Single-line comment. Syntax #This is a comment Example: #Single line comment echo \"hello world\" Multi-line comment. Syntax: : ' This is a Multi-line comments' Example: echo \"multiline comments\" : ' Print some word' Types of codes? ```bash {cmd} ls . ```javascript {cmd=\"node\"} const date = Date.now() console.log(date.toString()) ```erd {cdm:true, output:\u201dhtlm\u201d, args:[\u201c-i\u201d, \u201cinput_file\u201d, \u201c-f\u201d, \u201csvg]} [Person] *name Height Weight +birth_location_id [Location] *id City State Country Person *--1 Location ``` {r} #code written in R print(\u2018AIR Forum 2018\u2019)","title":"VS code:"},{"location":"es/","text":"Bienvenidos a MkDocs Guia en espa\u00f1ol Documentacion en espa\u00f1ol. Image add the markdown extensions - attr_list and - md_in_html to the yaml file Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Home"},{"location":"es/#bienvenidos-a-mkdocs","text":"Guia en espa\u00f1ol Documentacion en espa\u00f1ol. Image add the markdown extensions - attr_list and - md_in_html to the yaml file Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Bienvenidos a MkDocs"}]}